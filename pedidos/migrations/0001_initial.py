# Generated by Django 5.2.7 on 2025-10-26 22:17

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('produtos', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EnderecoEntrega',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('sobrenome', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('cep', models.CharField(blank=True, max_length=9, null=True)),
                ('rua', models.CharField(blank=True, max_length=255, null=True)),
                ('numero', models.CharField(blank=True, max_length=10, null=True)),
                ('complemento', models.CharField(blank=True, max_length=255)),
                ('bairro', models.CharField(blank=True, max_length=100, null=True)),
                ('cidade', models.CharField(blank=True, max_length=100, null=True)),
                ('estado', models.CharField(blank=True, max_length=2, null=True)),
            ],
            options={
                'verbose_name_plural': 'Endereços de Entrega',
            },
        ),
        migrations.CreateModel(
            name='OpcaoFrete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=100, unique=True)),
                ('custo', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('ativo', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cupom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50, unique=True)),
                ('tipo', models.CharField(choices=[('percentagem', 'Percentagem'), ('fixo', 'Valor Fixo')], default='percentagem', max_length=15)),
                ('valor_desconto', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('valor_minimo_pedido', models.DecimalField(decimal_places=2, default=0.0, help_text='Valor mínimo do pedido para aplicar o cupom.', max_digits=10)),
                ('limite_usos', models.IntegerField(default=100, help_text='Número máximo de vezes que este cupom pode ser usado por todos os clientes.', validators=[django.core.validators.MinValueValidator(1)])),
                ('usos_atuais', models.IntegerField(default=0)),
                ('data_inicio', models.DateTimeField(default=django.utils.timezone.now)),
                ('data_fim', models.DateTimeField()),
                ('ativo', models.BooleanField(default=True)),
                ('categoria', models.ForeignKey(blank=True, help_text='(Opcional) Limite o cupom a uma categoria específica de produtos.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='produtos.categoria')),
                ('produto', models.ForeignKey(blank=True, help_text='(Opcional) Limite o cupom a um produto específico.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='produtos.produto')),
            ],
            options={
                'verbose_name': 'Cupom de Desconto',
                'verbose_name_plural': 'Cupons de Desconto',
            },
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Aguardando Pagamento', 'Aguardando Pagamento'), ('Pagamento Aprovado', 'Pagamento Aprovado'), ('Em Separação', 'Em Separação'), ('Enviado', 'Enviado'), ('Entregue', 'Entregue'), ('Cancelado', 'Cancelado')], default='Em Separação', max_length=50)),
                ('valor_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('valor_frete', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('valor_desconto', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('metodo_envio', models.CharField(default='Retirada na Loja', max_length=100)),
                ('codigo_rastreio', models.CharField(blank=True, max_length=100, null=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pedidos', to=settings.AUTH_USER_MODEL)),
                ('cupom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pedidos.cupom')),
                ('endereco', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='pedidos.enderecoentrega')),
            ],
        ),
        migrations.CreateModel(
            name='ItemPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preco_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantidade', models.PositiveIntegerField()),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='produtos.produto')),
                ('variacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='produtos.variacao')),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='pedidos.pedido')),
            ],
        ),
    ]
