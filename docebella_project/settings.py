
from pathlib import Path
from decouple import config
import os
import dj_database_url

"""
Django settings for docebella_project project.

Generated by 'django-admin startproject' using Django 5.2.7.
...
"""

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# SECURITY WARNING: keep the secret key used in production secret!
# A SECRET_KEY ser√° definida no bloco CONFIGURA√á√ïES DE PRODU√á√ÉO abaixo.

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [] # Ser√° sobrescrito no bloco CONFIGURA√á√ïES DE PRODU√á√ÉO


# Application definition

INSTALLED_APPS = [
    'jazzmin',  # Tema Admin
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Extras Django
    'django.contrib.humanize',
    'storages',
    'widget_tweaks',

    # Apps do projeto (ordem importa!)
    'usuarios',
    'produtos',   # <-- precisa vir antes de carrinho e pedidos
    'carrinho',
    'pedidos',
]

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # ADICIONE ESTA LINHA:
    'whitenoise.middleware.WhiteNoiseMiddleware', 
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# NOVO: Formato correto para Django 4.2+ e WhiteNoise
# ESTE BLOCO SER√Å SOBRESCRITO PELA L√ìGICA DE PRODU√á√ÉO ABAIXO
# Removido o bloco antigo de STORAGES aqui.

# üö® ADICIONE ESTA LINHA FALTANTE üö®
ROOT_URLCONF = 'docebella_project.urls' 

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates', 
        'DIRS': [BASE_DIR / 'templates'], 
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # Context Processor do Carrinho
                'docebella_project.context_processors.carrinho_contador',
                'produtos.context_processors.categorias_header',
            ],
        },
    },
]

import os
BASE_DIR = Path(__file__).resolve().parent.parent

import dj_database_url

# 1. Definir a URL do banco de dados (a mesma que voc√™ j√° usa)
DATABASE_URL = 'postgresql://postgres_ysv1_user:vQqFme7kHwGUssrtu4YiUNaUogwc0Ncy@dpg-d3s6g7q4d50c738ilvhg-a.oregon-postgres.render.com/postgres_ysv1'

# 2. Configurar a URL e desligar o pool de conex√µes
db_config = dj_database_url.config(
    default=DATABASE_URL,
    conn_max_age=0,        # ‚úÖ Fecha a conex√£o ap√≥s cada request
    ssl_require=True,
)

# 3. Opcional: ainda pode manter o health check (n√£o faz mal)
db_config['CONN_HEALTH_CHECKS'] = True

DATABASES = {
    'default': db_config
}



# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo' 

USE_I18N = True

# üö® CORRE√á√ÉO DE LOCALIZA√á√ÉO üö®: Ativar Localiza√ß√£o
USE_L10N = True

USE_TZ = True


# ----------------------------------------------------
# CONFIGURA√á√ïES DE AUTENTICA√á√ÉO
# ----------------------------------------------------

# üö® INSER√á√ÉO CRUCIAL PARA USU√ÅRIO CUSTOMIZADO E LOGIN POR E-MAIL üö®

# 1. Diz ao Django para usar o seu modelo de usu√°rio 'Cliente' no app 'usuarios'.
AUTH_USER_MODEL = 'usuarios.Cliente' 

# 2. Define que o campo de login (o identificador √∫nico) √© o 'email'.
USERNAME_FIELD = 'email' 

# 3. Define quais campos s√£o solicitados quando voc√™ roda 'createsuperuser'.
REQUIRED_FIELDS = ['nome_completo'] 

# ----------------------------------------------------
# CONFIGURA√á√ïES DE ARQUIVOS (Static - Manter)
# ----------------------------------------------------
# Configura√ß√µes de Est√°ticos s√£o mantidas com os nomes de vari√°veis do bloco original.

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Removidas as configura√ß√µes antigas de MEDIA_URL e MEDIA_ROOT aqui.


# ----------------------------------------------------
# CONFIGURA√á√ïES DE PRODU√á√ÉO / DEPLOY
# ----------------------------------------------------

# L√™ a chave secreta do ambiente (Render) ou usa o valor padr√£o
SECRET_KEY = config('SECRET_KEY', default='django-insecure-#3-c$i&#$#wx^n6^#0v4wvzo^1#^os5sd1ou)n%%0*j&0f0g1(') 

# Hosts Permitidos em Produ√ß√£o
ALLOWED_HOSTS = [
    '127.0.0.1', 
    'localhost', 
    'docebella-ecommerce-q2py.onrender.com', 
    '.onrender.com'               
] 

# >>> CORRE√á√ÉO CR√çTICA DO ERRO 403 (CSRF) <<<
CSRF_TRUSTED_ORIGINS = [
    'https://docebella-ecommerce-q2py.onrender.com',
    'https://*.onrender.com',
]


# #######################################################################
# # Bloco de CONFIGURA√á√ïES DE ARQUIVOS (M√≠dia/S3) - CORRE√á√ÉO DE ATIVA√á√ÉO
# #######################################################################

AWS_ACCESS_KEY_ID = config('AWS_ACCESS_KEY_ID', default='')
AWS_SECRET_ACCESS_KEY = config('AWS_SECRET_ACCESS_KEY', default='')
AWS_STORAGE_BUCKET_NAME = config('AWS_STORAGE_BUCKET_NAME', default='')
AWS_S3_REGION_NAME = config('AWS_S3_REGION_NAME', default='us-east-2')

# Inicializa o storage local para fallback
DEFAULT_FILE_STORAGE = 'core.storages.LocalCacheS3FallbackStorage'
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Configura√ß√£o que pode ajudar a resolver conflitos de caminho
AWS_LOCATION = 'media/produtos'  # O Django S3Boto3Storage adiciona isso como prefixo

# üîß Par√¢metros padr√£o do S3
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=1209600, public',  
}

# üö´ NOVO PADR√ÉO DA AWS ‚Üí Buckets "ACL desativadas" (Bucket owner enforced)
# Portanto, n√£o podemos usar 'public-read' ou qualquer ACL expl√≠cita.
AWS_DEFAULT_ACL = None

# üö® CORRE√á√ÉO CR√çTICA AQUI üö®
# Ativa o S3 se o nome do bucket ESTIVER configurado E o access key TAMB√âM estiver.
if AWS_STORAGE_BUCKET_NAME and AWS_ACCESS_KEY_ID:
    DEFAULT_FILE_STORAGE = 'core.storages.LocalCacheS3FallbackStorage'
    AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.{AWS_S3_REGION_NAME}.amazonaws.com'

    # ‚ö†Ô∏è MANT√âM O MEDIA_URL LOCAL (IMPORTANTE!)
    MEDIA_URL = '/media/'

# üö® ADICIONE ESTAS DUAS LINHAS TEMPORARIAMENTE üö®
print(f"DEBUG: DEFAULT_FILE_STORAGE est√° usando: {DEFAULT_FILE_STORAGE}")
print(f"DEBUG: MEDIA_URL est√° usando: {MEDIA_URL}")
# üö® REMOVA DEPOIS DE TESTAR üö®


# ----------------------------------------------------
# BLOCO STORAGES (N√≠vel de topo)
# ----------------------------------------------------
# Usa o DEFAULT_FILE_STORAGE que foi definido acima (S3 ou Local)
STORAGES = {
    "default": {
        "BACKEND": DEFAULT_FILE_STORAGE,
    },
    # Usa Whitenoise para arquivos est√°ticos (sempre bom)
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}

# #######################################################################
# # Fim do Bloco de CONFIGURA√á√ïES DE ARQUIVOS
# #######################################################################


# ----------------------------------------------------
# CONFIGURA√á√ïES JAZZMIN (Admin Moderno)
# ----------------------------------------------------
JAZZMIN_SETTINGS = {
    "site_title": "Doce & Bella Gest√£o", 
    "site_header": "Doce & Bella",
    
    # Logo Customizado (Deve estar em static/img/logo.png)
    "site_logo": "img/logo.png", 

    "welcome_sign": "Bem-vindo ao Painel de Gest√£o Doce & Bella",
    
    # Tema Moderno (Escolha um tema que funcione com o seu rosa)
    "theme": "flatly", 
    "custom_css": None, 
    
    # Navega√ß√£o e √çcones
    "show_sidebar": True,
    "navigation_expanded": True,
    "topbar_links": [
        {"name": "Ver Loja",  "url": "home", "new_window": True},
    ],
    
    # √çcones para seus apps (Melhora a usabilidade do Admin)
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "produtos.produto": "fas fa-box-open",
        "produtos.categoria": "fas fa-tag",
        "pedidos.pedido": "fas fa-clipboard-list",
        "pedidos.cupom": "fas fa-percent",
        "carrinho.itemcarrinho": "fas fa-shopping-cart",
    },
    "footer_text": "Desenvolvido com Django e üíñ"
}

# ----------------------------------------------------
# REDIRECIONAMENTO AP√ìS LOGIN
# ----------------------------------------------------
LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'home'
LOGIN_URL = '/conta/login/'
